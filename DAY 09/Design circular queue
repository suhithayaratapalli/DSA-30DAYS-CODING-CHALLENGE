DAY 09 - LC 933

class MyCircularQueue {
    private int[] queue;
    private int front;
    private int rear;
    private int size;

    public MyCircularQueue(int k) {
        queue = new int[k + 1]; 
        size = k + 1;
        front = 0;
public boolean enQueue(int value) {
        if (isFull()) return false;
        queue[rear] = value;
        rear = (rear + 1) % size;
        return true;
    }
    public boolean deQueue() {
…        if (isEmpty()) return -1;
        return queue[(rear - 1 + size) % size];
    }
    public boolean isEmpty(){
        return front == rear;
    }
    public boolean isFull(){
        return (rear+1)%size==front;
    }
}

                                                                                          
                                                                                                                                                                                    …                                                                         
                                                                                                                                                                                                                    
                                                                                                                                                                                                                    
